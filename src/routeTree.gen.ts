/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UauthenticatedLayoutRouteImport } from './routes/_uauthenticatedLayout'
import { Route as AuthenticatedLayoutRouteImport } from './routes/_authenticatedLayout'
import { Route as AuthenticatedLayoutIndexRouteImport } from './routes/_authenticatedLayout/index'
import { Route as UauthenticatedLayoutLoginIndexRouteImport } from './routes/_uauthenticatedLayout/login/index'
import { Route as AuthenticatedLayoutUsersIndexRouteImport } from './routes/_authenticatedLayout/users/index'
import { Route as AuthenticatedLayoutPageSettingsIndexRouteImport } from './routes/_authenticatedLayout/page-settings/index'
import { Route as AuthenticatedLayoutMeetingSessionsIndexRouteImport } from './routes/_authenticatedLayout/meeting-sessions/index'

const UauthenticatedLayoutRoute = UauthenticatedLayoutRouteImport.update({
  id: '/_uauthenticatedLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedLayoutRoute = AuthenticatedLayoutRouteImport.update({
  id: '/_authenticatedLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedLayoutIndexRoute =
  AuthenticatedLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)
const UauthenticatedLayoutLoginIndexRoute =
  UauthenticatedLayoutLoginIndexRouteImport.update({
    id: '/login/',
    path: '/login/',
    getParentRoute: () => UauthenticatedLayoutRoute,
  } as any)
const AuthenticatedLayoutUsersIndexRoute =
  AuthenticatedLayoutUsersIndexRouteImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)
const AuthenticatedLayoutPageSettingsIndexRoute =
  AuthenticatedLayoutPageSettingsIndexRouteImport.update({
    id: '/page-settings/',
    path: '/page-settings/',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)
const AuthenticatedLayoutMeetingSessionsIndexRoute =
  AuthenticatedLayoutMeetingSessionsIndexRouteImport.update({
    id: '/meeting-sessions/',
    path: '/meeting-sessions/',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedLayoutIndexRoute
  '/meeting-sessions': typeof AuthenticatedLayoutMeetingSessionsIndexRoute
  '/page-settings': typeof AuthenticatedLayoutPageSettingsIndexRoute
  '/users': typeof AuthenticatedLayoutUsersIndexRoute
  '/login': typeof UauthenticatedLayoutLoginIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AuthenticatedLayoutIndexRoute
  '/meeting-sessions': typeof AuthenticatedLayoutMeetingSessionsIndexRoute
  '/page-settings': typeof AuthenticatedLayoutPageSettingsIndexRoute
  '/users': typeof AuthenticatedLayoutUsersIndexRoute
  '/login': typeof UauthenticatedLayoutLoginIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticatedLayout': typeof AuthenticatedLayoutRouteWithChildren
  '/_uauthenticatedLayout': typeof UauthenticatedLayoutRouteWithChildren
  '/_authenticatedLayout/': typeof AuthenticatedLayoutIndexRoute
  '/_authenticatedLayout/meeting-sessions/': typeof AuthenticatedLayoutMeetingSessionsIndexRoute
  '/_authenticatedLayout/page-settings/': typeof AuthenticatedLayoutPageSettingsIndexRoute
  '/_authenticatedLayout/users/': typeof AuthenticatedLayoutUsersIndexRoute
  '/_uauthenticatedLayout/login/': typeof UauthenticatedLayoutLoginIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/meeting-sessions' | '/page-settings' | '/users' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/meeting-sessions' | '/page-settings' | '/users' | '/login'
  id:
    | '__root__'
    | '/_authenticatedLayout'
    | '/_uauthenticatedLayout'
    | '/_authenticatedLayout/'
    | '/_authenticatedLayout/meeting-sessions/'
    | '/_authenticatedLayout/page-settings/'
    | '/_authenticatedLayout/users/'
    | '/_uauthenticatedLayout/login/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedLayoutRoute: typeof AuthenticatedLayoutRouteWithChildren
  UauthenticatedLayoutRoute: typeof UauthenticatedLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_uauthenticatedLayout': {
      id: '/_uauthenticatedLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UauthenticatedLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticatedLayout': {
      id: '/_authenticatedLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticatedLayout/': {
      id: '/_authenticatedLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedLayoutIndexRouteImport
      parentRoute: typeof AuthenticatedLayoutRoute
    }
    '/_uauthenticatedLayout/login/': {
      id: '/_uauthenticatedLayout/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UauthenticatedLayoutLoginIndexRouteImport
      parentRoute: typeof UauthenticatedLayoutRoute
    }
    '/_authenticatedLayout/users/': {
      id: '/_authenticatedLayout/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedLayoutUsersIndexRouteImport
      parentRoute: typeof AuthenticatedLayoutRoute
    }
    '/_authenticatedLayout/page-settings/': {
      id: '/_authenticatedLayout/page-settings/'
      path: '/page-settings'
      fullPath: '/page-settings'
      preLoaderRoute: typeof AuthenticatedLayoutPageSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedLayoutRoute
    }
    '/_authenticatedLayout/meeting-sessions/': {
      id: '/_authenticatedLayout/meeting-sessions/'
      path: '/meeting-sessions'
      fullPath: '/meeting-sessions'
      preLoaderRoute: typeof AuthenticatedLayoutMeetingSessionsIndexRouteImport
      parentRoute: typeof AuthenticatedLayoutRoute
    }
  }
}

interface AuthenticatedLayoutRouteChildren {
  AuthenticatedLayoutIndexRoute: typeof AuthenticatedLayoutIndexRoute
  AuthenticatedLayoutMeetingSessionsIndexRoute: typeof AuthenticatedLayoutMeetingSessionsIndexRoute
  AuthenticatedLayoutPageSettingsIndexRoute: typeof AuthenticatedLayoutPageSettingsIndexRoute
  AuthenticatedLayoutUsersIndexRoute: typeof AuthenticatedLayoutUsersIndexRoute
}

const AuthenticatedLayoutRouteChildren: AuthenticatedLayoutRouteChildren = {
  AuthenticatedLayoutIndexRoute: AuthenticatedLayoutIndexRoute,
  AuthenticatedLayoutMeetingSessionsIndexRoute:
    AuthenticatedLayoutMeetingSessionsIndexRoute,
  AuthenticatedLayoutPageSettingsIndexRoute:
    AuthenticatedLayoutPageSettingsIndexRoute,
  AuthenticatedLayoutUsersIndexRoute: AuthenticatedLayoutUsersIndexRoute,
}

const AuthenticatedLayoutRouteWithChildren =
  AuthenticatedLayoutRoute._addFileChildren(AuthenticatedLayoutRouteChildren)

interface UauthenticatedLayoutRouteChildren {
  UauthenticatedLayoutLoginIndexRoute: typeof UauthenticatedLayoutLoginIndexRoute
}

const UauthenticatedLayoutRouteChildren: UauthenticatedLayoutRouteChildren = {
  UauthenticatedLayoutLoginIndexRoute: UauthenticatedLayoutLoginIndexRoute,
}

const UauthenticatedLayoutRouteWithChildren =
  UauthenticatedLayoutRoute._addFileChildren(UauthenticatedLayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedLayoutRoute: AuthenticatedLayoutRouteWithChildren,
  UauthenticatedLayoutRoute: UauthenticatedLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
